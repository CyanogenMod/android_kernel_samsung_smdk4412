#ifndef __MDNIE_TABLE_P2_BOE_H__
#define __MDNIE_TABLE_P2_BOE_H__

#include "mdnie.h"


static const unsigned char power_lut[2][9] = {
	{0x42, 0x47, 0x3E, 0x52, 0x42, 0x3F, 0x3A, 0x37, 0x3F},
	{0x38, 0x3d, 0x34, 0x48, 0x38, 0x35, 0x30, 0x2d, 0x35},
};

static const unsigned short tune_dyn_gallery_cabcOff_bo[] = {
	/*start P2 dynamic, gallery, cabcOff*/
	0x0001, 0x0060,	/* LABC 0060 LABC SCR*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x000d,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x03ff,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x01a0,	/*CS GAIN*/
	0x0042, 0x0000,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x1a00,	/*GAMMA p5 2.5/1.8*/
	0x00d7, 0x1a00,
	0x00d8, 0x1a00,
	0x00d9, 0x1a00,
	0x00da, 0x1a00,
	0x00db, 0x1a00,
	0x00dc, 0x1a00,
	0x00dd, 0x1a00,
	0x00de, 0x1a00,
	0x00df, 0x1a00,
	0x00e0, 0xa40c,
	0x00e1, 0xa40c,
	0x00e2, 0xa40c,
	0x00e3, 0xa40d,
	0x00e4, 0xa40d,
	0x00e5, 0xa40e,
	0x00e6, 0xa40e,
	0x00e7, 0xa40e,
	0x00e8, 0xa40e,
	0x00e9, 0xa30a,
	0x00ea, 0xa30a,
	0x00eb, 0x1c22,
	0x00ec, 0x1a31,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_dyn_ui_cabcOff_bo[] = {
	/*start P2 dynamic, ui, cabcOff*/
	0x0001, 0x0060,	/*SCR LABC 0060*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x01a0,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x1a00,	/*GAMMA p5 2.5/1.8*/
	0x00d7, 0x1a00,
	0x00d8, 0x1a00,
	0x00d9, 0x1a00,
	0x00da, 0x1a00,
	0x00db, 0x1a00,
	0x00dc, 0x1a00,
	0x00dd, 0x1a00,
	0x00de, 0x1a00,
	0x00df, 0x1a00,
	0x00e0, 0xa40c,
	0x00e1, 0xa40c,
	0x00e2, 0xa40c,
	0x00e3, 0xa40d,
	0x00e4, 0xa40d,
	0x00e5, 0xa40e,
	0x00e6, 0xa40e,
	0x00e7, 0xa40e,
	0x00e8, 0xa40e,
	0x00e9, 0xa30a,
	0x00ea, 0xa30a,
	0x00eb, 0x1c22,
	0x00ec, 0x1a31,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_dyn_vid_cabcOff_bo[] = {
	/*start P2 dynamic, video, cabcOff*/
	0x0001, 0x0060,	/* LABC 0060 LABC SCR*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x000d,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x03ff,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x01a0,	/*CS GAIN*/
	0x0042, 0x0000,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x1a00,	/*GAMMA p5 2.5/1.8*/
	0x00d7, 0x1a00,
	0x00d8, 0x1a00,
	0x00d9, 0x1a00,
	0x00da, 0x1a00,
	0x00db, 0x1a00,
	0x00dc, 0x1a00,
	0x00dd, 0x1a00,
	0x00de, 0x1a00,
	0x00df, 0x1a00,
	0x00e0, 0xa40c,
	0x00e1, 0xa40c,
	0x00e2, 0xa40c,
	0x00e3, 0xa40d,
	0x00e4, 0xa40d,
	0x00e5, 0xa40e,
	0x00e6, 0xa40e,
	0x00e7, 0xa40e,
	0x00e8, 0xa40e,
	0x00e9, 0xa30a,
	0x00ea, 0xa30a,
	0x00eb, 0x1c22,
	0x00ec, 0x1a31,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_dyn_vtcall_cabcOff_bo[] = {
	/*start P2 dynamic, vtcall, cabcOff*/
	0x0001, 0x0060,	/* LABC 0060 LABC SCR*/
	0x002c, 0x0fff,	/*DNR VTcall,dir_th   0x003c*/
	0x002d, 0x19ff,	/*DNR dir_num,decont7 0x0a08*/
	0x002e, 0xff16,	/*DNR decont5,mask_th 0x1010*/
	0x002f, 0x0000,	/*DNR block_th        0x0400*/
	0x003A, 0x000d,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x03ff,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x01a0,	/*CS GAIN*/
	0x0042, 0x0000,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x1a00,	/*GAMMA p5 2.5/1.8*/
	0x00d7, 0x1a00,
	0x00d8, 0x1a00,
	0x00d9, 0x1a00,
	0x00da, 0x1a00,
	0x00db, 0x1a00,
	0x00dc, 0x1a00,
	0x00dd, 0x1a00,
	0x00de, 0x1a00,
	0x00df, 0x1a00,
	0x00e0, 0xa40c,
	0x00e1, 0xa40c,
	0x00e2, 0xa40c,
	0x00e3, 0xa40d,
	0x00e4, 0xa40d,
	0x00e5, 0xa40e,
	0x00e6, 0xa40e,
	0x00e7, 0xa40e,
	0x00e8, 0xa40e,
	0x00e9, 0xa30a,
	0x00ea, 0xa30a,
	0x00eb, 0x1c22,
	0x00ec, 0x1a31,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_mov_gallery_cabcOff_bo[] = {
	/*start P2 movie, gallery, cabcOff*/
	0x0001, 0x0060,	/*SCR LABC 0060*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x0000,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xffff,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfcf3,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ea,	/*yw B*/
	0x00d6, 0x0b00,	/*GAMMA p1 boe*/
	0x00d7, 0x0b00,
	0x00d8, 0x0b00,
	0x00d9, 0x0b00,
	0x00da, 0x0b00,
	0x00db, 0x0b00,
	0x00dc, 0x0b00,
	0x00dd, 0xa315,
	0x00de, 0xa315,
	0x00df, 0xa315,
	0x00e0, 0xa315,
	0x00e1, 0xa315,
	0x00e2, 0xa315,
	0x00e3, 0xa315,
	0x00e4, 0xa315,
	0x00e5, 0xa315,
	0x00e6, 0xa315,
	0x00e7, 0xa315,
	0x00e8, 0xa315,
	0x00e9, 0xa315,
	0x00ea, 0xa315,
	0x00eb, 0xa315,
	0x00ec, 0xa315,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_mov_ui_cabcOff_bo[] = {
	/*start P2 movie, ui, cabcOff*/
	0x0001, 0x0060,	/*SCR LABC 0060*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x0000,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xffff,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfcf3,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ea,	/*yw B*/
	0x00d6, 0x0b00,	/*GAMMA p1 boe*/
	0x00d7, 0x0b00,
	0x00d8, 0x0b00,
	0x00d9, 0x0b00,
	0x00da, 0x0b00,
	0x00db, 0x0b00,
	0x00dc, 0x0b00,
	0x00dd, 0xa315,
	0x00de, 0xa315,
	0x00df, 0xa315,
	0x00e0, 0xa315,
	0x00e1, 0xa315,
	0x00e2, 0xa315,
	0x00e3, 0xa315,
	0x00e4, 0xa315,
	0x00e5, 0xa315,
	0x00e6, 0xa315,
	0x00e7, 0xa315,
	0x00e8, 0xa315,
	0x00e9, 0xa315,
	0x00ea, 0xa315,
	0x00eb, 0xa315,
	0x00ec, 0xa315,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_mov_vid_cabcOff_bo[] = {
	/*start P2 movie, video, cabcOff*/
	0x0001, 0x0060,	/*SCR LABC 0060*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x0000,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xffff,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfcf3,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ea,	/*yw B*/
	0x00d6, 0x0b00,	/*GAMMA p1 boe*/
	0x00d7, 0x0b00,
	0x00d8, 0x0b00,
	0x00d9, 0x0b00,
	0x00da, 0x0b00,
	0x00db, 0x0b00,
	0x00dc, 0x0b00,
	0x00dd, 0xa315,
	0x00de, 0xa315,
	0x00df, 0xa315,
	0x00e0, 0xa315,
	0x00e1, 0xa315,
	0x00e2, 0xa315,
	0x00e3, 0xa315,
	0x00e4, 0xa315,
	0x00e5, 0xa315,
	0x00e6, 0xa315,
	0x00e7, 0xa315,
	0x00e8, 0xa315,
	0x00e9, 0xa315,
	0x00ea, 0xa315,
	0x00eb, 0xa315,
	0x00ec, 0xa315,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_mov_vtcall_cabcOff_bo[] = {
	/*start P2 movie, ui, cabcOff*/
	0x0001, 0x0060,	/*SCR LABC 0060*/
	0x002c, 0x0fff,	/*DNR VTcall,dir_th   0x003c*/
	0x002d, 0x19ff,	/*DNR dir_num,decont7 0x0a08*/
	0x002e, 0xff16,	/*DNR decont5,mask_th 0x1010*/
	0x002f, 0x0000,	/*DNR block_th        0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x0000,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xffff,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfcf3,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ea,	/*yw B*/
	0x00d6, 0x0b00,	/*GAMMA p1 boe*/
	0x00d7, 0x0b00,
	0x00d8, 0x0b00,
	0x00d9, 0x0b00,
	0x00da, 0x0b00,
	0x00db, 0x0b00,
	0x00dc, 0x0b00,
	0x00dd, 0xa315,
	0x00de, 0xa315,
	0x00df, 0xa315,
	0x00e0, 0xa315,
	0x00e1, 0xa315,
	0x00e2, 0xa315,
	0x00e3, 0xa315,
	0x00e4, 0xa315,
	0x00e5, 0xa315,
	0x00e6, 0xa315,
	0x00e7, 0xa315,
	0x00e8, 0xa315,
	0x00e9, 0xa315,
	0x00ea, 0xa315,
	0x00eb, 0xa315,
	0x00ec, 0xa315,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_std_gallery_cabcOff_bo[] = {
	/*start P2 standard, gallery, cabcOff*/
	0x0001, 0x0060,	/* LABC 0060 LABC SCR*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x000d,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0030,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x00a0,	/*CS GAIN*/
	0x0042, 0x0020,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x1a00,	/*GAMMA p5 2.5/2.0*/
	0x00d7, 0x1a00,
	0x00d8, 0x1a00,
	0x00d9, 0x1a00,
	0x00da, 0x1a00,
	0x00db, 0x1a00,
	0x00dc, 0x1a00,
	0x00dd, 0x1a00,
	0x00de, 0x1a00,
	0x00df, 0x1a00,
	0x00e0, 0x1a00,
	0x00e1, 0x1a00,
	0x00e2, 0x1a00,
	0x00e3, 0x1a00,
	0x00e4, 0x1a00,
	0x00e5, 0x1a00,
	0x00e6, 0xa414,
	0x00e7, 0xa414,
	0x00e8, 0xa414,
	0x00e9, 0xa414,
	0x00ea, 0xa414,
	0x00eb, 0x2005,
	0x00ec, 0x1d1b,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_std_ui_cabcOff_bo[] = {
	/*start P2 standard, ui, cabcOff*/
	0x0001, 0x0060,	/*SCR LABC 0060*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x00a0,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x1a00,	/*GAMMA p5 2.5/2.0*/
	0x00d7, 0x1a00,
	0x00d8, 0x1a00,
	0x00d9, 0x1a00,
	0x00da, 0x1a00,
	0x00db, 0x1a00,
	0x00dc, 0x1a00,
	0x00dd, 0x1a00,
	0x00de, 0x1a00,
	0x00df, 0x1a00,
	0x00e0, 0x1a00,
	0x00e1, 0x1a00,
	0x00e2, 0x1a00,
	0x00e3, 0x1a00,
	0x00e4, 0x1a00,
	0x00e5, 0x1a00,
	0x00e6, 0xa414,
	0x00e7, 0xa414,
	0x00e8, 0xa414,
	0x00e9, 0xa414,
	0x00ea, 0xa414,
	0x00eb, 0x2005,
	0x00ec, 0x1d1b,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_std_vid_cabcOff_bo[] = {
	/*start P2 standard, video, cabcOff*/
	0x0001, 0x0060,	/* LABC 0060 LABC SCR*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x000d,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0030,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x00a0,	/*CS GAIN*/
	0x0042, 0x0020,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x1a00,	/*GAMMA p5 2.5/2.0*/
	0x00d7, 0x1a00,
	0x00d8, 0x1a00,
	0x00d9, 0x1a00,
	0x00da, 0x1a00,
	0x00db, 0x1a00,
	0x00dc, 0x1a00,
	0x00dd, 0x1a00,
	0x00de, 0x1a00,
	0x00df, 0x1a00,
	0x00e0, 0x1a00,
	0x00e1, 0x1a00,
	0x00e2, 0x1a00,
	0x00e3, 0x1a00,
	0x00e4, 0x1a00,
	0x00e5, 0x1a00,
	0x00e6, 0xa414,
	0x00e7, 0xa414,
	0x00e8, 0xa414,
	0x00e9, 0xa414,
	0x00ea, 0xa414,
	0x00eb, 0x2005,
	0x00ec, 0x1d1b,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_std_vtcall_cabcOff_bo[] = {
	/*start P2 standard, vtcall, cabcOff*/
	0x0001, 0x0060,	/* LABC 0060 LABC SCR*/
	0x002c, 0x0fff,	/*DNR VTcall,dir_th   0x003c*/
	0x002d, 0x19ff,	/*DNR dir_num,decont7 0x0a08*/
	0x002e, 0xff16,	/*DNR decont5,mask_th 0x1010*/
	0x002f, 0x0000,	/*DNR block_th        0x0400*/
	0x003A, 0x000d,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x03ff,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x00a0,	/*CS GAIN*/
	0x0042, 0x0000,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x1a00,	/*GAMMA p5 2.5/2.0*/
	0x00d7, 0x1a00,
	0x00d8, 0x1a00,
	0x00d9, 0x1a00,
	0x00da, 0x1a00,
	0x00db, 0x1a00,
	0x00dc, 0x1a00,
	0x00dd, 0x1a00,
	0x00de, 0x1a00,
	0x00df, 0x1a00,
	0x00e0, 0x1a00,
	0x00e1, 0x1a00,
	0x00e2, 0x1a00,
	0x00e3, 0x1a00,
	0x00e4, 0x1a00,
	0x00e5, 0x1a00,
	0x00e6, 0xa414,
	0x00e7, 0xa414,
	0x00e8, 0xa414,
	0x00e9, 0xa414,
	0x00ea, 0xa414,
	0x00eb, 0x2005,
	0x00ec, 0x1d1b,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_dyn_gallery_cabcOn_bo[] = {
	/*start P2 dynamic, gallery, cabcOn*/
	0x0001, 0x0070,	/* LABC SCR CABC*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x000d,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x03ff,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x01a0,	/*CS GAIN*/
	0x0042, 0x0000,	/*DE TH (MAX DIFF)*/
	0x0072, 0x0000,	/*CABC Dgain*/
	0x0073, 0x0000,
	0x0074, 0x0000,
	0x0075, 0x0000,
	0x007C, 0x0002,	/*Dynamic LCD*/
	/*0x00b4, 0x5640,	CABC PWM*/
	/*0x00b4, 0x4640,count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x1a00,	/*GAMMA p5 2.5/1.8*/
	0x00d7, 0x1a00,
	0x00d8, 0x1a00,
	0x00d9, 0x1a00,
	0x00da, 0x1a00,
	0x00db, 0xa407,
	0x00dc, 0xa407,
	0x00dd, 0xa407,
	0x00de, 0xa407,
	0x00df, 0xa407,
	0x00e0, 0xa407,
	0x00e1, 0xa407,
	0x00e2, 0xa407,
	0x00e3, 0xa407,
	0x00e4, 0xa407,
	0x00e5, 0xa407,
	0x00e6, 0xa407,
	0x00e7, 0xa407,
	0x00e8, 0xa407,
	0x00e9, 0xa407,
	0x00ea, 0xa407,
	0x00eb, 0x1844,
	0x00ec, 0x1461,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_dyn_ui_cabcOn_bo[] = {
	/*start P2 dynamic, ui, cabcOn*/
	0x0001, 0x0070,	/*SCR LABC CABC*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x01a0,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	0x0072, 0x0000,	/*CABC Dgain*/
	0x0073, 0x0000,
	0x0074, 0x0000,
	0x0075, 0x0000,
	0x007C, 0x0002,	/*Dynamic LCD*/
	/*0x00b4, 0x5640,	CABC PWM*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x1a00,	/*GAMMA p5 2.5/1.8*/
	0x00d7, 0x1a00,
	0x00d8, 0x1a00,
	0x00d9, 0x1a00,
	0x00da, 0x1a00,
	0x00db, 0xa407,
	0x00dc, 0xa407,
	0x00dd, 0xa407,
	0x00de, 0xa407,
	0x00df, 0xa407,
	0x00e0, 0xa407,
	0x00e1, 0xa407,
	0x00e2, 0xa407,
	0x00e3, 0xa407,
	0x00e4, 0xa407,
	0x00e5, 0xa407,
	0x00e6, 0xa407,
	0x00e7, 0xa407,
	0x00e8, 0xa407,
	0x00e9, 0xa407,
	0x00ea, 0xa407,
	0x00eb, 0x1844,
	0x00ec, 0x1461,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_dyn_vid_cabcOn_bo[] = {
	/*start P2 dynamic, video, cabcOn*/
	0x0001, 0x0070,	/* LABC  SCR CABC*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x000d,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x03ff,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x01a0,	/*CS GAIN*/
	0x0042, 0x0000,	/*DE TH (MAX DIFF)*/
	0x0072, 0x0000,	/*CABC Dgain*/
	0x0073, 0x0000,
	0x0074, 0x0000,
	0x0075, 0x0000,
	0x007C, 0x0002,	/*Dynamic LCD*/
	/*0x00b4, 0x5640,	CABC PWM*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x2600,	/*GAMMA p5 2.5/1.8*/
	0x00d7, 0x2600,
	0x00d8, 0x2600,
	0x00d9, 0x2600,
	0x00da, 0x2501,
	0x00db, 0x2501,
	0x00dc, 0x2501,
	0x00dd, 0x2501,
	0x00de, 0x2501,
	0x00df, 0x2501,
	0x00e0, 0x2501,
	0x00e1, 0x2501,
	0x00e2, 0x2501,
	0x00e3, 0x2501,
	0x00e4, 0x2501,
	0x00e5, 0x2501,
	0x00e6, 0x2501,
	0x00e7, 0x2501,
	0x00e8, 0x2501,
	0x00e9, 0x2501,
	0x00ea, 0x1f20,
	0x00eb, 0x136b,
	0x00ec, 0x1081,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_dyn_vtcall_cabcOn_bo[] = {
	/*start P2 dynamic, vtcall, cabcOn*/
	0x0001, 0x0070,	/* LABC SCR CABC*/
	0x002c, 0x0fff,	/*DNR VTcall,dir_th   0x003c*/
	0x002d, 0x19ff,	/*DNR dir_num,decont7 0x0a08*/
	0x002e, 0xff16,	/*DNR decont5,mask_th 0x1010*/
	0x002f, 0x0000,	/*DNR block_th        0x0400*/
	0x003A, 0x000d,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x03ff,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x01a0,	/*CS GAIN*/
	0x0042, 0x0000,	/*DE TH (MAX DIFF)*/
	0x0072, 0x0000,	/*CABC Dgain*/
	0x0073, 0x0000,
	0x0074, 0x0000,
	0x0075, 0x0000,
	0x007C, 0x0002,	/*Dynamic LCD*/
	/*0x00b4, 0x5640,CABC PWM*/
	/*0x00b4, 0x4640,count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x1a00,	/*GAMMA p5 2.5/1.8*/
	0x00d7, 0x1a00,
	0x00d8, 0x1a00,
	0x00d9, 0x1a00,
	0x00da, 0x1a00,
	0x00db, 0xa407,
	0x00dc, 0xa407,
	0x00dd, 0xa407,
	0x00de, 0xa407,
	0x00df, 0xa407,
	0x00e0, 0xa407,
	0x00e1, 0xa407,
	0x00e2, 0xa407,
	0x00e3, 0xa407,
	0x00e4, 0xa407,
	0x00e5, 0xa407,
	0x00e6, 0xa407,
	0x00e7, 0xa407,
	0x00e8, 0xa407,
	0x00e9, 0xa407,
	0x00ea, 0xa407,
	0x00eb, 0x1844,
	0x00ec, 0x1461,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_mov_gallery_cabcOn_bo[] = {
	/*start P2 movie, gallery, cabcOn*/
	0x0001, 0x0070,	/*SCR LABC CABC*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x0000,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	0x0072, 0x0000,	/*CABC Dgain*/
	0x0073, 0x0000,
	0x0074, 0x0000,
	0x0075, 0x0000,
	0x007C, 0x0002,	/*Dynamic LCD*/
	/*0x00b4, 0x5640,CABC PWM*/
	/*0x00b4, 0x4640,count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xffff,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfcf3,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ea,	/*yw B*/
	0x00d6, 0x3f00,	/*GAMMA p1 boe*/
	0x00d7, 0x2003,
	0x00d8, 0x2003,
	0x00d9, 0x2003,
	0x00da, 0x2003,
	0x00db, 0x2003,
	0x00dc, 0x2003,
	0x00dd, 0x2003,
	0x00de, 0x2003,
	0x00df, 0x2003,
	0x00e0, 0x2003,
	0x00e1, 0x2003,
	0x00e2, 0x2003,
	0x00e3, 0x2003,
	0x00e4, 0x2003,
	0x00e5, 0x2003,
	0x00e6, 0x2003,
	0x00e7, 0x2003,
	0x00e8, 0x2003,
	0x00e9, 0x2003,
	0x00ea, 0x2003,
	0x00eb, 0x2003,
	0x00ec, 0x2003,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_mov_ui_cabcOn_bo[] = {
	/*start P2 movie, ui, cabcOn*/
	0x0001, 0x0070,	/*SCR LABC CABC*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x0000,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	0x0072, 0x0000,	/*CABC Dgain*/
	0x0073, 0x0000,
	0x0074, 0x0000,
	0x0075, 0x0000,
	0x007C, 0x0002,	/*Dynamic LCD*/
	/*0x00b4, 0x5640,	CABC PWM*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xffff,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfcf3,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ea,	/*yw B*/
	0x00d6, 0x3f00,	/*GAMMA p1 boe*/
	0x00d7, 0x2003,
	0x00d8, 0x2003,
	0x00d9, 0x2003,
	0x00da, 0x2003,
	0x00db, 0x2003,
	0x00dc, 0x2003,
	0x00dd, 0x2003,
	0x00de, 0x2003,
	0x00df, 0x2003,
	0x00e0, 0x2003,
	0x00e1, 0x2003,
	0x00e2, 0x2003,
	0x00e3, 0x2003,
	0x00e4, 0x2003,
	0x00e5, 0x2003,
	0x00e6, 0x2003,
	0x00e7, 0x2003,
	0x00e8, 0x2003,
	0x00e9, 0x2003,
	0x00ea, 0x2003,
	0x00eb, 0x2003,
	0x00ec, 0x2003,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_mov_vid_cabcOn_bo[] = {
	/*start P2 movie, video, cabcOn*/
	0x0001, 0x0070,	/*SCR LABC CABC*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x0000,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	0x0072, 0x0000,	/*CABC Dgain*/
	0x0073, 0x0000,
	0x0074, 0x0000,
	0x0075, 0x0000,
	0x007C, 0x0002,	/*Dynamic LCD*/
	/*0x00b4, 0x5640,	CABC PWM*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xffff,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfcf3,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ea,	/*yw B*/
	0x00d6, 0x6800,	/*GAMMA p1 boe*/
	0x00d7, 0x2007,
	0x00d8, 0x2007,
	0x00d9, 0x2007,
	0x00da, 0x2007,
	0x00db, 0x2007,
	0x00dc, 0x2007,
	0x00dd, 0x2007,
	0x00de, 0x2007,
	0x00df, 0x2007,
	0x00e0, 0x2007,
	0x00e1, 0x2007,
	0x00e2, 0x2007,
	0x00e3, 0x2007,
	0x00e4, 0x2007,
	0x00e5, 0x2007,
	0x00e6, 0x2007,
	0x00e7, 0x2007,
	0x00e8, 0x2007,
	0x00e9, 0x2007,
	0x00ea, 0x2007,
	0x00eb, 0x2007,
	0x00ec, 0x1a33,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_mov_vtcall_cabcOn_bo[] = {
	/*start P2 movie, ui, cabcOn*/
	0x0001, 0x0070,	/*SCR LABC CABC*/
	0x002c, 0x0fff,	/*DNR VTcall,dir_th   0x003c*/
	0x002d, 0x19ff,	/*DNR dir_num,decont7 0x0a08*/
	0x002e, 0xff16,	/*DNR decont5,mask_th 0x1010*/
	0x002f, 0x0000,	/*DNR block_th        0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x0000,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	0x0072, 0x0000,	/*CABC Dgain*/
	0x0073, 0x0000,
	0x0074, 0x0000,
	0x0075, 0x0000,
	0x007C, 0x0002,	/*Dynamic LCD*/
	/*0x00b4, 0x5640,	CABC PWM*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xffff,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfcf3,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ea,	/*yw B*/
	0x00d6, 0x3f00,	/*GAMMA p1 boe*/
	0x00d7, 0x2003,
	0x00d8, 0x2003,
	0x00d9, 0x2003,
	0x00da, 0x2003,
	0x00db, 0x2003,
	0x00dc, 0x2003,
	0x00dd, 0x2003,
	0x00de, 0x2003,
	0x00df, 0x2003,
	0x00e0, 0x2003,
	0x00e1, 0x2003,
	0x00e2, 0x2003,
	0x00e3, 0x2003,
	0x00e4, 0x2003,
	0x00e5, 0x2003,
	0x00e6, 0x2003,
	0x00e7, 0x2003,
	0x00e8, 0x2003,
	0x00e9, 0x2003,
	0x00ea, 0x2003,
	0x00eb, 0x2003,
	0x00ec, 0x2003,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_std_gallery_cabcOn_bo[] = {
	/*start P2 standard, gallery, cabcOn*/
	0x0001, 0x0070,	/* LABC SCR CABC*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x000d,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0030,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x00a0,	/*CS GAIN*/
	0x0042, 0x0020,	/*DE TH (MAX DIFF)*/
	0x0072, 0x0000,	/*CABC Dgain*/
	0x0073, 0x0000,
	0x0074, 0x0000,
	0x0075, 0x0000,
	0x007C, 0x0002,	/*Dynamic LCD*/
	/*0x00b4, 0x5640,	CABC PWM*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x3f00,	/*GAMMA p5 2.5/2.0*/
	0x00d7, 0x2003,
	0x00d8, 0x2003,
	0x00d9, 0x2003,
	0x00da, 0x2003,
	0x00db, 0x2003,
	0x00dc, 0x2003,
	0x00dd, 0x2003,
	0x00de, 0x2003,
	0x00df, 0x2003,
	0x00e0, 0x2003,
	0x00e1, 0x2003,
	0x00e2, 0x2003,
	0x00e3, 0x2003,
	0x00e4, 0x2003,
	0x00e5, 0x2003,
	0x00e6, 0x2003,
	0x00e7, 0x2003,
	0x00e8, 0x2100,
	0x00e9, 0xa40c,
	0x00ea, 0xa40c,
	0x00eb, 0x1c26,
	0x00ec, 0x1652,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_std_ui_cabcOn_bo[] = {
	/*start P2 standard, ui, cabcOn*/
	0x0001, 0x0070,	/*SCR LABC CABC*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x00a0,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	0x0072, 0x0000,	/*CABC Dgain*/
	0x0073, 0x0000,
	0x0074, 0x0000,
	0x0075, 0x0000,
	0x007C, 0x0002,	/*Dynamic LCD*/
	/*0x00b4, 0x5640,	CABC PWM*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x3f00,  /*GAMMA p5 2.5/2.0*/
	0x00d7, 0x2003,
	0x00d8, 0x2003,
	0x00d9, 0x2003,
	0x00da, 0x2003,
	0x00db, 0x2003,
	0x00dc, 0x2003,
	0x00dd, 0x2003,
	0x00de, 0x2003,
	0x00df, 0x2003,
	0x00e0, 0x2003,
	0x00e1, 0x2003,
	0x00e2, 0x2003,
	0x00e3, 0x2003,
	0x00e4, 0x2003,
	0x00e5, 0x2003,
	0x00e6, 0x2003,
	0x00e7, 0x2003,
	0x00e8, 0x2100,
	0x00e9, 0xa40c,
	0x00ea, 0xa40c,
	0x00eb, 0x1c26,
	0x00ec, 0x1652,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_std_vid_cabcOn_bo[] = {
	/*start P2 standard, video, cabcOn*/
	0x0001, 0x0070,	/* LABC SCR CABC*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x000d,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0030,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x00a0,	/*CS GAIN*/
	0x0042, 0x0020,	/*DE TH (MAX DIFF)*/
	0x0072, 0x0000,	/*CABC Dgain*/
	0x0073, 0x0000,
	0x0074, 0x0000,
	0x0075, 0x0000,
	0x007C, 0x0002,	/*Dynamic LCD*/
	/*0x00b4, 0x5640,	CABC PWM*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x2600,	/*GAMMA p5 2.5/2.0*/
	0x00d7, 0x2600,
	0x00d8, 0x2600,
	0x00d9, 0x2401,
	0x00da, 0x2401,
	0x00db, 0x2401,
	0x00dc, 0x2401,
	0x00dd, 0x2401,
	0x00de, 0x2401,
	0x00df, 0x2401,
	0x00e0, 0x2401,
	0x00e1, 0x2401,
	0x00e2, 0x2401,
	0x00e3, 0x2401,
	0x00e4, 0x2401,
	0x00e5, 0x2401,
	0x00e6, 0x2401,
	0x00e7, 0x2401,
	0x00e8, 0x2401,
	0x00e9, 0x2401,
	0x00ea, 0x2016,
	0x00eb, 0x1654,
	0x00ec, 0x1179,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_std_vtcall_cabcOn_bo[] = {
	/*start P2 standard, vtcall, cabcOn*/
	0x0001, 0x0070,	/* LABC SCR CABC*/
	0x002c, 0x0fff,	/*DNR VTcall,dir_th   0x003c*/
	0x002d, 0x19ff,	/*DNR dir_num,decont7 0x0a08*/
	0x002e, 0xff16,	/*DNR decont5,mask_th 0x1010*/
	0x002f, 0x0000,	/*DNR block_th        0x0400*/
	0x003A, 0x000d,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x03ff,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x00a0,	/*CS GAIN*/
	0x0042, 0x0000,	/*DE TH (MAX DIFF)*/
	0x0072, 0x0000,	/*CABC Dgain*/
	0x0073, 0x0000,
	0x0074, 0x0000,
	0x0075, 0x0000,
	0x007C, 0x0002,	/*Dynamic LCD*/
	/*0x00b4, 0x5640,	CABC PWM*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00c8, 0x0000,	/*kb R	SCR*/
	0x00c9, 0x0000,	/*gc R*/
	0x00ca, 0xffff,	/*rm R*/
	0x00cb, 0xfffa,	/*yw R*/
	0x00cc, 0x0000,	/*kb G*/
	0x00cd, 0xffff,	/*gc G*/
	0x00ce, 0x0000,	/*rm G*/
	0x00cf, 0xfffa,	/*yw G*/
	0x00d0, 0x00ff,	/*kb B*/
	0x00d1, 0x00ff,	/*gc B*/
	0x00d2, 0x00ff,	/*rm B*/
	0x00d3, 0x00ff,	/*yw B*/
	0x00d6, 0x3f00,	/*GAMMA p5 2.5/2.0*/
	0x00d7, 0x2003,
	0x00d8, 0x2003,
	0x00d9, 0x2003,
	0x00da, 0x2003,
	0x00db, 0x2003,
	0x00dc, 0x2003,
	0x00dd, 0x2003,
	0x00de, 0x2003,
	0x00df, 0x2003,
	0x00e0, 0x2003,
	0x00e1, 0x2003,
	0x00e2, 0x2003,
	0x00e3, 0x2003,
	0x00e4, 0x2003,
	0x00e5, 0x2003,
	0x00e6, 0x2003,
	0x00e7, 0x2003,
	0x00e8, 0x2100,
	0x00e9, 0xa40c,
	0x00ea, 0xa40c,
	0x00eb, 0x1c26,
	0x00ec, 0x1652,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_camera_bo[] = {
	/*start P2 camera, bypass*/
	0x0001, 0x0020,
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x0000,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00d6, 0x2000,	/*gamma ori*/
	0x00d7, 0x2000,
	0x00d8, 0x2000,
	0x00d9, 0x2000,
	0x00da, 0x2000,
	0x00db, 0x2000,
	0x00dc, 0x2000,
	0x00dd, 0x2000,
	0x00de, 0x2000,
	0x00df, 0x2000,
	0x00e0, 0x2000,
	0x00e1, 0x2000,
	0x00e2, 0x2000,
	0x00e3, 0x2000,
	0x00e4, 0x2000,
	0x00e5, 0x2000,
	0x00e6, 0x2000,
	0x00e7, 0x2000,
	0x00e8, 0x2000,
	0x00e9, 0x2000,
	0x00ea, 0x2000,
	0x00eb, 0x2000,
	0x00ec, 0x2000,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_camera_outdoor_bo[] = {
	/*start P2 camera, ove*/
	0x0001, 0x0022,	/*LABC OVE*/
	0x002c, 0x0fff,	/*DNR bypass 0x003C*/
	0x002d, 0x1900,	/*DNR bypass 0x0a08*/
	0x002e, 0x0000,	/*DNR bypass 0x1010*/
	0x002f, 0x0fff,	/*DNR bypass 0x0400*/
	0x003A, 0x0009,	/*HDTR (DE off)(CS only 9)*/
	0x003B, 0x0000,	/*DE SHARPNESS*/
	0x003C, 0x0000,	/*NOISE LEVEL*/
	0x003F, 0x0000,	/*CS GAIN*/
	0x0042, 0x003f,	/*DE TH (MAX DIFF)*/
	0x0054, 0x6050,	/*OVE Lightness Chroma*/
	/*0x00b4, 0x4640,	count PWM*/
	0x00d6, 0x2000,	/*gamma ori*/
	0x00d7, 0x2000,
	0x00d8, 0x2000,
	0x00d9, 0x2000,
	0x00da, 0x2000,
	0x00db, 0x2000,
	0x00dc, 0x2000,
	0x00dd, 0x2000,
	0x00de, 0x2000,
	0x00df, 0x2000,
	0x00e0, 0x2000,
	0x00e1, 0x2000,
	0x00e2, 0x2000,
	0x00e3, 0x2000,
	0x00e4, 0x2000,
	0x00e5, 0x2000,
	0x00e6, 0x2000,
	0x00e7, 0x2000,
	0x00e8, 0x2000,
	0x00e9, 0x2000,
	0x00ea, 0x2000,
	0x00eb, 0x2000,
	0x00ec, 0x2000,
	0x00ed, 0xFF00,
	0x00d5, 0x0001,	/*gamma apply*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_cold_cabcOff_bo[] = {
	/*start P2 cold, cabcOff*/
	0x0001, 0x0064,	/*SCR LABC MCM*/
	0x005b, 0x0064,	/*MCM 10000K*/
	0x0063, 0x8a00,	/*cb*/
	0x0065, 0x0073,	/*cr*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_cold_outdoor_cabcOff_bo[] = {
	/*start P2 cold, ove, cabcOff*/
	0x0001, 0x0066,	/*SCR LABC MCM OVE*/
	0x0054, 0x6050,	/*OVE Lightness Chroma*/
	0x005b, 0x0064,	/*MCM 10000K*/
	0x0063, 0x8a00,	/*cb*/
	0x0065, 0x0073,	/*cr*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_outdoor_cabcOff_bo[] = {
	/*start P2 ove, cabcOff*/
	0x0001, 0x0062,	/*SCR LABC OVE*/
	0x0054, 0x6050,	/*OVE Lightness Chroma*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_warm_cabcOff_bo[] = {
	/*start P2 warm, cabcOff*/
	0x0001, 0x0064,	/*SCR LABC MCM*/
	0x005b, 0x0028,	/*MCM 4000K*/
	0x0061, 0x7600,	/*cb*/
	0x0063, 0x008d,	/*cr*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_warm_outdoor_cabcOff_bo[] = {
	/*start P2 warm, ove, cabcOff*/
	0x0001, 0x0066,	/*SCR LABC MCM OVE*/
	0x0054, 0x6050,	/*OVE Lightness Chroma*/
	0x005b, 0x0028,	/*MCM 4000K*/
	0x0061, 0x7600,	/*cb*/
	0x0063, 0x008d,	/*cr*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_cold_cabcOn_bo[] = {
	/*start P2 cold, cabcOn*/
	0x0001, 0x0074,	/*SCR LABC MCM CABC*/
	0x005b, 0x0064,	/*MCM 10000K*/
	0x0063, 0x8a00,	/*cb*/
	0x0065, 0x0073,	/*cr*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_cold_outdoor_cabcOn_bo[] = {
	/*start P2 cold, ove, cabcOn*/
	0x0001, 0x0076,	/*SCR LABC MCM OVE*/
	0x0054, 0x6050,	/*OVE Lightness Chroma*/
	0x005b, 0x0064,	/*MCM 10000K*/
	0x0063, 0x8a00,	/*cb*/
	0x0065, 0x0073,	/*cr*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_outdoor_cabcOn_bo[] = {
	/*start P2 ove, cabcOn*/
	0x0001, 0x0072,	/*SCR LABC OVE CABC*/
	0x0054, 0x6050,	/*OVE Lightness Chroma*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_warm_cabcOn_bo[] = {
	/*start P2 warm, cabcOn*/
	0x0001, 0x0074,	/*SCR LABC MCM CABC*/
	0x005b, 0x0028,	/*MCM 4000K*/
	0x0061, 0x7600,	/*cb*/
	0x0063, 0x008d,	/*cr*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};

static const unsigned short tune_warm_outdoor_cabcOn_bo[] = {
	/*start P2 warm, ove, cabcOn*/
	0x0001, 0x0076,	/*SCR LABC MCM OVE CABC*/
	0x0054, 0x6050,	/*OVE Lightness Chroma*/
	0x005b, 0x0028,	/*MCM 4000K*/
	0x0061, 0x7600,	/*cb*/
	0x0063, 0x008d,	/*cr*/
	0x0028, 0x0000,	/*Register Mask*/
	/*end*/
	END_SEQ, 0x0000,
};


struct mdnie_tunning_info etc_table_bo[CABC_MAX][OUTDOOR_MAX][TONE_MAX] = {
	{
		{
			{"NORMAL",		NULL},
			{"WARM",		tune_warm_cabcOff_bo},
			{"COLD",		tune_cold_cabcOff_bo},
		},
		{
			{"NORMAL_OUTDOOR",	tune_outdoor_cabcOff_bo},
			{"WARM_OUTDOOR",	tune_warm_outdoor_cabcOff_bo},
			{"COLD_OUTDOOR",	tune_cold_outdoor_cabcOff_bo},
		},
	},
	{
		{
			{"NORMAL_CABC",		NULL},
			{"WARM_CABC",		tune_warm_cabcOn_bo},
			{"COLD_CABC",		tune_cold_cabcOn_bo},
		},
		{
			{"NORMAL_OUTDOOR_CABC",	tune_outdoor_cabcOn_bo},
			{"WARM_OUTDOOR_CABC",	tune_warm_outdoor_cabcOn_bo},
			{"COLD_OUTDOOR_CABC",	tune_cold_outdoor_cabcOn_bo},
		},
	},
};

struct mdnie_tunning_info_cabc tunning_table_bo
					[CABC_MAX][MODE_MAX][SCENARIO_MAX] = {
{
	{
		{"DYNAMIC_UI",		tune_dyn_ui_cabcOff_bo, 0},
		{"DYNAMIC_VIDEO_NOR", tune_dyn_vid_cabcOff_bo, LUT_VIDEO},
		{"DYNAMIC_VIDEO_WARM",	tune_dyn_vid_cabcOff_bo, LUT_VIDEO},
		{"DYNAMIC_VIDEO_COLD",	tune_dyn_vid_cabcOff_bo, LUT_VIDEO},
		{"CAMERA",		tune_camera_bo,		0},
		{"DYNAMIC_UI",		tune_dyn_ui_cabcOff_bo,	0},
		{"DYNAMIC_GALLERY",	tune_dyn_gallery_cabcOff_bo, 0},
		{"DYNAMIC_VT",		tune_dyn_vtcall_cabcOff_bo, 0},
	}, {
		{"STANDARD_UI",		tune_std_ui_cabcOff_bo,	0},
		{"STANDARD_VIDEO_NOR", tune_std_vid_cabcOff_bo, LUT_VIDEO},
		{"STANDARD_VIDEO_WARM",	tune_std_vid_cabcOff_bo, LUT_VIDEO},
		{"STANDARD_VIDEO_COLD",	tune_std_vid_cabcOff_bo, LUT_VIDEO},
		{"CAMERA",		tune_camera_bo,		0},
		{"STANDARD_UI",		tune_std_ui_cabcOff_bo, 0},
		{"STANDARD_GALLERY",	tune_std_gallery_cabcOff_bo, 0},
		{"STANDARD_VT",		tune_std_vtcall_cabcOff_bo, 0},
	}, {
		{"MOVIE_UI",		tune_mov_ui_cabcOff_bo,	0},
		{"MOVIE_VIDEO_NOR",	tune_mov_vid_cabcOff_bo, LUT_VIDEO},
		{"MOVIE_VIDEO_WARM",	tune_mov_vid_cabcOff_bo, LUT_VIDEO},
		{"MOVIE_VIDEO_COLD",	tune_mov_vid_cabcOff_bo, LUT_VIDEO},
		{"CAMERA",		tune_camera_bo,		0},
		{"MOVIE_UI",		tune_mov_ui_cabcOff_bo,	0},
		{"MOVIE_GALLERY",	tune_mov_gallery_cabcOff_bo,	0},
		{"MOVIE_VT",		tune_mov_vtcall_cabcOff_bo,	0},
	},
},
{
	{
		{"DYNAMIC_UI_CABC",	tune_dyn_ui_cabcOn_bo,	0},
		{"DYNAMIC_VIDEO_NOR_CABC", tune_dyn_vid_cabcOn_bo, LUT_VIDEO},
		{"DYNAMIC_VIDEO_WARM_CABC", tune_dyn_vid_cabcOn_bo, LUT_VIDEO},
		{"DYNAMIC_VIDEO_COLD",	tune_dyn_vid_cabcOn_bo, LUT_VIDEO},
		{"CAMERA",		tune_camera_bo,	0},
		{"DYNAMIC_UI_CABC",	tune_dyn_ui_cabcOn_bo,	0},
		{"DYNAMIC_GALLERY_CABC", tune_dyn_gallery_cabcOn_bo, 0},
		{"DYNAMIC_VT_CABC",	tune_dyn_vtcall_cabcOn_bo,	0},
	}, {
		{"STANDARD_UI_CABC",	tune_std_ui_cabcOn_bo,	0},
		{"STANDARD_VIDEO_NOR_CABC", tune_std_vid_cabcOn_bo, LUT_VIDEO},
		{"STANDARD_VIDEO_WARM_CABC", tune_std_vid_cabcOn_bo, LUT_VIDEO},
		{"STANDARD_VIDEO_COLD_CABC", tune_std_vid_cabcOn_bo, LUT_VIDEO},
		{"CAMERA",		tune_camera_bo,		0},
		{"STANDARD_UI_CABC",	tune_std_ui_cabcOn_bo, 0},
		{"STANDARD_GALLERY_CABC", tune_std_gallery_cabcOn_bo, 0},
		{"STANDARD_VT_CABC",	tune_std_vtcall_cabcOn_bo, 0},
	}, {
		{"MOVIE_UI_CABC",	tune_mov_ui_cabcOn_bo,	 0},
		{"MOVIE_VIDEO_NOR_CABC", tune_mov_vid_cabcOn_bo, LUT_VIDEO},
		{"MOVIE_VIDEO_WARM_CABC", tune_mov_vid_cabcOn_bo, LUT_VIDEO},
		{"MOVIE_VIDEO_COLD_CABC", tune_mov_vid_cabcOn_bo, LUT_VIDEO},
		{"CAMERA",		tune_camera_bo,		0},
		{"MOVIE_UI_CABC",	tune_mov_ui_cabcOn_bo,	0},
		{"MOVIE_GALLERY_CABC",	tune_mov_gallery_cabcOn_bo, 0},
		{"MOVIE_VT_CABC",	tune_mov_vtcall_cabcOn_bo, 0},
	},
},
};

#endif /* __MDNIE_TABLE_P2_BOE_H__ */

